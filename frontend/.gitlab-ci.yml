build-frontend-code-job:
  stage: build
  script:
    - echo "BUILD_FRONTEND_JOB_ID=${CI_JOB_ID}" > frontend_job_variables.env
    - cd frontend
    - npm install
    - npm run build
  only:
    - pushes
    - merge_requests
  artifacts:
    paths:
      - frontend/dist/frontend
      - frontend_job_variables.env

sonarqube-frontend-sast:
  stage: test
  rules:
    - changes: 
      - backend/**/*
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    policy: pull-push
    unprotect: false
    untracked: false
    when: on_success
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  allow_failure: true
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONAR_URL} 
      -Dsonar.login=${SONAR_LOGIN_FRONT} 
  needs:
    - build-frontend-code-job


telegram-notification-frontend:
  stage: notify
  only:
    - pushes
    - merge_requests
  script:
    - source frontend_job_variables.env
    - |
      curl -X POST "${API_TELEGRAM}" -H "Content-Type: application/json" --data "{\"chat_id\":\"-1002185373712\", \"text\":\"Дмитрий Третьяков собрал frontend-приложение. URL артефакта ${CI_PROJECT_URL}/-/jobs/${BUILD_FRONTEND_JOB_ID}/artifacts/download\"}"
  needs:
    - build-frontend-code-job