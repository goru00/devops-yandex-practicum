cache:
  paths:
    - frontend/dist/frontend

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - build
  - test
  - release
  - notify

build-frontend-code-job:
  stage: build
  script:
    - echo "BUILD_FRONTEND_JOB_ID=${CI_JOB_ID}" > frontend_job_variables.env
    - cd frontend
    - npm install
    - npm run build
  rules:
    - changes: 
      - frontend/**/*
  artifacts:
    paths:
      - frontend_job_variables.env

sonarqube-frontend-sast:
  stage: test
  rules:
    - changes: 
      - frontend/**/*
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    policy: pull-push
    unprotect: false
    untracked: false
    when: on_success
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  allow_failure: true
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONAR_URL} 
      -Dsonar.login=${SONAR_LOGIN_FRONT} 
  needs:
    - build-frontend-code-job

upload-frontend-release:
  stage: release
  only:
     changes:
     - frontend/**/* 
  needs:
    - build-frontend-code-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
      --upload-file sausage-store-${VERSION}.tar.gz
      ${NEXUS_REPO_URL}/${NEXUS_REPO_FRONTEND_NAME}/${VERSION}/sausage-store-${VERSION}.tar.gz

telegram-notification-frontend:
  stage: notify
  rules:
    - changes: 
      - frontend/**/*
  script:
    - source frontend_job_variables.env
    - |
      curl -X POST "${API_TELEGRAM}" -H "Content-Type: application/json" --data "{\"chat_id\":\"-1002185373712\", \"text\":\"Дмитрий Третьяков собрал frontend-приложение. URL артефакта ${CI_PROJECT_URL}/-/jobs/${BUILD_FRONTEND_JOB_ID}/artifacts/download\"}"
  needs:
    - build-frontend-code-job
    - sonarqube-frontend-sast
    - upload-frontend-release